/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthDashboardLayoutRouteImport } from './routes/_auth/_dashboardLayout/route'
import { Route as AuthDashboardLayoutIndexImport } from './routes/_auth/_dashboardLayout/index'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthDashboardLayoutRouteRoute = AuthDashboardLayoutRouteImport.update({
  id: '/_dashboardLayout',
  getParentRoute: () => AuthRoute,
} as any)

const AuthDashboardLayoutIndexRoute = AuthDashboardLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthDashboardLayoutRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_auth/_dashboardLayout': {
      id: '/_auth/_dashboardLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthDashboardLayoutRouteImport
      parentRoute: typeof AuthImport
    }
    '/_auth/_dashboardLayout/': {
      id: '/_auth/_dashboardLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthDashboardLayoutIndexImport
      parentRoute: typeof AuthDashboardLayoutRouteImport
    }
  }
}

// Create and export the route tree

interface AuthDashboardLayoutRouteRouteChildren {
  AuthDashboardLayoutIndexRoute: typeof AuthDashboardLayoutIndexRoute
}

const AuthDashboardLayoutRouteRouteChildren: AuthDashboardLayoutRouteRouteChildren =
  {
    AuthDashboardLayoutIndexRoute: AuthDashboardLayoutIndexRoute,
  }

const AuthDashboardLayoutRouteRouteWithChildren =
  AuthDashboardLayoutRouteRoute._addFileChildren(
    AuthDashboardLayoutRouteRouteChildren,
  )

interface AuthRouteChildren {
  AuthDashboardLayoutRouteRoute: typeof AuthDashboardLayoutRouteRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardLayoutRouteRoute: AuthDashboardLayoutRouteRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthDashboardLayoutRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/': typeof AuthDashboardLayoutIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/': typeof AuthDashboardLayoutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/_auth/_dashboardLayout': typeof AuthDashboardLayoutRouteRouteWithChildren
  '/_auth/_dashboardLayout/': typeof AuthDashboardLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/login' | '/signup' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/login' | '/signup' | '/'
  id:
    | '__root__'
    | '/_auth'
    | '/login'
    | '/signup'
    | '/_auth/_dashboardLayout'
    | '/_auth/_dashboardLayout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login",
        "/signup"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/_dashboardLayout"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_auth/_dashboardLayout": {
      "filePath": "_auth/_dashboardLayout/route.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/_dashboardLayout/"
      ]
    },
    "/_auth/_dashboardLayout/": {
      "filePath": "_auth/_dashboardLayout/index.tsx",
      "parent": "/_auth/_dashboardLayout"
    }
  }
}
ROUTE_MANIFEST_END */
